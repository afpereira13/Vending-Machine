services:

  postgres:
    image: postgres
    environment: # Set up postgres database name and password
      POSTGRES_PASSWORD: m4CH!Ne
      POSTGRES_DB: vendingmachine
      POSTGRES_USER: vending
    ports: # Set up ports exposed for other containers to connect to
      - 5432:5432
    volumes:
      - ./database:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      app-tier:
        ipv4_address: 10.5.0.2

  vending_machine_app:
    build:
      context: .
      dockerfile: DOCKERFILE
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/usr/src
    ports:
      - 80:80
    networks:
      app-tier:
        ipv4_address: 10.5.0.3

  vending_machine_tests:
    build:
      context: .
      dockerfile: Dockerfile-Tests
    depends_on:
      postgres_tests:
        condition: service_healthy
    volumes:
      - ./src:/usr/src
    networks:
      app-tier:
        ipv4_address: 10.5.0.5

  postgres_tests:
    image: postgres
    environment: # Set up postgres database name and password
      POSTGRES_PASSWORD: m4CH!Ne
      POSTGRES_DB: vendingmachine
      POSTGRES_USER: vending
    ports: # Set up ports exposed for other containers to connect to
      - 5432:5432
    volumes:
      - ./database:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      app-tier:
        ipv4_address: 10.5.0.4

networks:
  app-tier:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
